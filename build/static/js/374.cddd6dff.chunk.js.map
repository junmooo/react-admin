{"version":3,"file":"static/js/374.cddd6dff.chunk.js","mappings":"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","sources":["containers/workbench/config/constants.tsx","components/common/FormModal.tsx","containers/workbench/modules/AlbumFilter.tsx","containers/workbench/index.tsx"],"sourcesContent":["import { SearchParams, DataType } from \"@/types/auth\";\r\nimport { Image, Badge } from \"antd\";\r\nimport { ColumnsType } from \"antd/es/table\";\r\nimport moment from \"moment\";\r\n\r\nconst RULE_REQUIRED = [{ required: true, message: \"该项为必填项\" }];\r\n\r\nconst TABLE_COLUMNS: (ColumnsType<DataType>[number] & {\r\n  editable?: boolean;\r\n  dataIndex: string;\r\n})[] = [\r\n  {\r\n    title: \"专辑名称\",\r\n    dataIndex: \"albumName\",\r\n    key: \"albumName\",\r\n  },\r\n  {\r\n    title: \"标题\",\r\n    dataIndex: \"albumTitle\",\r\n    key: \"albumTitle\",\r\n  },\r\n  {\r\n    title: \"副标题\",\r\n    dataIndex: \"albumSubTitle\",\r\n    key: \"albumSubTitle\",\r\n  },\r\n  {\r\n    title: \"专辑描述\",\r\n    dataIndex: \"albumDesc\",\r\n    key: \"albumDesc\",\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: \"创建时间\",\r\n    dataIndex: \"timeCreated\",\r\n    key: \"timeCreated\",\r\n    render: (value, record, index) => {\r\n      return moment(value).format(\"yy-MM-DD hh:mm\");\r\n    },\r\n  },\r\n];\r\nconst SEACH_COLUMNS: SearchParams = [\r\n  {\r\n    label: \"关键词：（标题、副标题、描述、备注）\",\r\n    name: \"keyword\",\r\n    key: \"keyword\",\r\n  },\r\n  {\r\n    label: \"创建时间：\",\r\n    name: \"date\",\r\n    valueType: \"dateRange\",\r\n    key: \"date\",\r\n  },\r\n];\r\n\r\nconst ALBUM = [\r\n  {\r\n    title: \"专辑名称\",\r\n    name: \"albumName\",\r\n    key: \"albumName\",\r\n    rules: RULE_REQUIRED,\r\n  },\r\n  {\r\n    title: \"标题\",\r\n    name: \"albumTitle\",\r\n    key: \"albumTitle\",\r\n    rules: RULE_REQUIRED,\r\n  },\r\n  {\r\n    title: \"副标题\",\r\n    name: \"albumSubTitle\",\r\n    key: \"albumSubTitle\",\r\n  },\r\n  {\r\n    title: \"专辑描述\",\r\n    name: \"albumDesc\",\r\n    valueType: \"textArea\",\r\n    key: \"albumDesc\",\r\n  },\r\n];\r\n\r\nconst EXPANDED_ROW_COLUMN: ColumnsType<DataType> = [\r\n  {\r\n    title: \"上传时间\",\r\n    dataIndex: \"timeCreated\",\r\n    key: \"timeCreated\",\r\n    render: (value) => {\r\n      return moment(value).format(\"yy-MM-DD hh:mm\");\r\n    },\r\n  },\r\n  {\r\n    title: \"显示/隐藏\",\r\n    dataIndex: \"hideFlag\",\r\n    key: \"hideFlag\",\r\n    render: (v: string) => {\r\n      if (v === \"01\") {\r\n        return <Badge status=\"success\" text=\"显示\" />;\r\n      } else {\r\n        return <Badge status=\"error\" text=\"隐藏\" />;\r\n      }\r\n    },\r\n  },\r\n  {\r\n    title: \"预览\",\r\n    dataIndex: \"url\",\r\n    key: \"url\",\r\n    render: (v: string) => {\r\n      const offsetIndex = v.lastIndexOf(\".\");\r\n      const preUrl =\r\n        v.substring(0, offsetIndex) + \"-pre\" + v.substring(offsetIndex);\r\n      return <Image src={preUrl} preview={false} />;\r\n    },\r\n  },\r\n];\r\n\r\nexport { SEACH_COLUMNS, TABLE_COLUMNS, ALBUM, EXPANDED_ROW_COLUMN };\r\n","import { Form, Modal, Spin } from \"antd\";\r\nimport { getField } from \"./commenFunc\";\r\n\r\nconst FormModal = (props: FormModalProps) => {\r\n  const {\r\n    columns,\r\n    show,\r\n    setShow,\r\n    title,\r\n    footer,\r\n    form,\r\n    loading = false,\r\n  } = props;\r\n  // const [form] = Form.useForm();\r\n\r\n  return (\r\n    <Modal\r\n      open={show}\r\n      width={\"80vw\"}\r\n      onCancel={() => {\r\n        setShow(false);\r\n      }}\r\n      footer={<></>}\r\n      title={\r\n        <div style={{ textAlign: \"center\", fontSize: \"20px\" }}>{title}</div>\r\n      }\r\n    >\r\n      <Spin spinning={loading}>\r\n        {columns.length > 0 && (\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            labelCol={{ span: 24 }}\r\n            wrapperCol={{ span: 24 }}\r\n            style={{\r\n              width: \"calc(80vw - 100px)\",\r\n              padding: \"50px 0 50px 100px\",\r\n              maxHeight: \"70vh\",\r\n              // overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {columns.map((item) => (\r\n              <Form.Item\r\n                label={item.title}\r\n                name={item.name}\r\n                key={item.key || item.name}\r\n                rules={item.rules}\r\n              >\r\n                {getField(item)}\r\n              </Form.Item>\r\n            ))}\r\n            <Form.Item wrapperCol={{ span: 24 }} key={\"footer\"}>\r\n              {footer && [...footer]}\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormModal;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Button, Row, Col, message, FormInstance } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { ALBUM, SEACH_COLUMNS } from \"../config/constants\";\r\nimport { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { getField } from \"@/components/common/commenFunc\";\r\nimport { useEffect } from \"react\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { album } from \"@/api\";\r\n\r\ntype IProps = {\r\n  runQueryByPage: (p: QueyAlbumParam) => void;\r\n  setModalProps: (p: FormModalProps) => void;\r\n  modalProps: FormModalProps;\r\n  modalForm: FormInstance<any>;\r\n  show: boolean;\r\n  setShow: (p: boolean) => void;\r\n  loading: boolean;\r\n  setLoading: (p: boolean) => void;\r\n};\r\nfunction AlbumFilter(props: IProps) {\r\n  const {\r\n    runQueryByPage,\r\n    setModalProps,\r\n    modalProps,\r\n    modalForm,\r\n    show,\r\n    setShow,\r\n    setLoading,\r\n  } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      runQueryByPage({ pgNum: 1, pgSize: 10 });\r\n    }\r\n  }, [runQueryByPage, show]);\r\n\r\n  const { run: runAddAlbum } = useRequest(album.addAlbum, {\r\n    onSuccess() {\r\n      message.info(\"新增成功\");\r\n      setShow(false);\r\n      setLoading(false);\r\n    },\r\n    onError(err) {\r\n      if (err.message) message.error(err.message);\r\n    },\r\n    manual: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={form}\r\n        style={{ margin: \"30px 20px\", minWidth: \"750px\" }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={(val) => {\r\n          runQueryByPage({\r\n            keyword: val.keyword,\r\n            start: val?.date && moment(val.date[0]).valueOf(),\r\n            end: val?.date && moment(val.date[1]).valueOf(),\r\n            pgNum: 1,\r\n            pgSize: 10,\r\n          });\r\n        }}\r\n        layout=\"vertical\"\r\n      >\r\n        <Row gutter={24}>\r\n          {SEACH_COLUMNS.map((item) => {\r\n            return (\r\n              <Col span={12} key={item.key || item.name}>\r\n                <Form.Item\r\n                  label={item.label}\r\n                  name={item.name}\r\n                  key={item.key || item.name}\r\n                  style={{}}\r\n                >\r\n                  {getField(item)}\r\n                </Form.Item>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <Row>\r\n          <Col span={24} style={{ textAlign: \"right\" }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              <SearchOutlined />\r\n              查询\r\n            </Button>\r\n            <span style={{ marginLeft: \"10px\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  setShow(true);\r\n                  setModalProps({\r\n                    ...modalProps,\r\n                    title: \"新增专辑\",\r\n                    columns: ALBUM,\r\n                    footer: [\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        key={\"create\"}\r\n                        block\r\n                        onClick={() => {\r\n                          modalForm.validateFields().then((res) => {\r\n                            setLoading(true);\r\n                            runAddAlbum(res);\r\n                          });\r\n                        }}\r\n                      >\r\n                        创建\r\n                      </Button>,\r\n                    ],\r\n                  });\r\n                }}\r\n              >\r\n                <PlusOutlined />\r\n                新增\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlbumFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { Button, Form, Spin, Table, message, InputNumber } from \"antd\";\r\nimport type { ColumnsType } from \"antd/es/table\";\r\nimport { album } from \"@/api\";\r\nimport { ALBUM, EXPANDED_ROW_COLUMN, TABLE_COLUMNS } from \"./config/constants\";\r\nimport { DataType } from \"@/types/auth\";\r\nimport { useRequest } from \"ahooks\";\r\nimport FormModal from \"@/components/common/FormModal\";\r\nimport AlbumFilter from \"./modules/AlbumFilter\";\r\nimport { debounce } from \"lodash\";\r\n\r\ntype AlbumVO = { album: Album; photos: Photo[] };\r\nconst AlbumManage: React.FC = () => {\r\n  const [data, setData] = useState<Album[]>([]);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [modalForm] = Form.useForm();\r\n  const [modalProps, setModalProps] = useState<FormModalProps>({\r\n    columns: [],\r\n    title: \"\",\r\n    show: showModal,\r\n    setShow: setShowModal,\r\n    footer: [<></>],\r\n  });\r\n  const { loading: upLoadLoading, run: runUpload } = useRequest(\r\n    album.addPhoto,\r\n    {\r\n      manual: true,\r\n      onSuccess: () => {\r\n        message.success(\"操作成功\");\r\n      },\r\n    }\r\n  );\r\n  const { loading: updateLoading, run: runUpdateAlbum } = useRequest(\r\n    album.updateAlbum,\r\n    {\r\n      onSuccess() {\r\n        message.success(\"修改成功\");\r\n        setShowModal(false);\r\n      },\r\n      onError(err) {\r\n        if (err.message) message.error(err.message);\r\n      },\r\n      manual: true,\r\n    }\r\n  );\r\n  const { loading: updatePhotoLoading, run: runUpdatePhoto } = useRequest(\r\n    album.updatePhoto,\r\n    {\r\n      onSuccess() {\r\n        message.success(\"修改成功\");\r\n        setShowModal(false);\r\n        runQueryByPage({\r\n          pgNum: 1,\r\n          pgSize: 10,\r\n        });\r\n      },\r\n      onError(err) {\r\n        if (err.message) message.error(err.message);\r\n      },\r\n      manual: true,\r\n    }\r\n  );\r\n  const { loading: deleteByIdLoading, run: deleteById } = useRequest(\r\n    album.deleteById,\r\n    {\r\n      onSuccess() {\r\n        message.success(\"修改成功\");\r\n        runQueryByPage({\r\n          pgNum: 1,\r\n          pgSize: 10,\r\n        });\r\n      },\r\n      onError(err) {\r\n        if (err.message) message.error(err.message);\r\n      },\r\n      manual: true,\r\n    }\r\n  );\r\n  const { loading: queryByPageLoading, run: runQueryByPage } = useRequest(\r\n    album.queryByPage,\r\n    {\r\n      onSuccess({ data: { records } }: { data: { records: AlbumVO[] } }) {\r\n        const albums = records.map((e) => ({ ...e.album, photos: e.photos }));\r\n        setData(albums);\r\n      },\r\n      onError(err) {\r\n        if (err.message) message.error(err.message);\r\n      },\r\n      manual: true,\r\n    }\r\n  );\r\n  const tableActions = (_: any, record: any) => (\r\n    <>\r\n      {record.hideFlag === \"01\" ? (\r\n        <Button\r\n          type=\"link\"\r\n          style={{ color: \"red\" }}\r\n          onClick={() => {\r\n            runUpdateAlbum({ id: record.id, hideFlag: \"00\" });\r\n          }}\r\n        >\r\n          隐藏\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          type=\"link\"\r\n          style={{ color: \"green\" }}\r\n          onClick={() => {\r\n            runUpdateAlbum({ id: record.id, hideFlag: \"01\" });\r\n          }}\r\n        >\r\n          激活\r\n        </Button>\r\n      )}\r\n      <Button\r\n        type=\"link\"\r\n        onClick={() => {\r\n          setShowModal(true);\r\n          modalForm.setFieldsValue(record);\r\n          setModalProps({\r\n            ...modalProps,\r\n            title: \"修改专辑\",\r\n            columns: ALBUM,\r\n            footer: [\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                key={\"create\"}\r\n                block\r\n                onClick={() => {\r\n                  modalForm.validateFields().then((res) => {\r\n                    runUpdateAlbum({ ...res, id: record.id });\r\n                  });\r\n                }}\r\n              >\r\n                修改\r\n              </Button>,\r\n            ],\r\n          });\r\n        }}\r\n      >\r\n        修改\r\n      </Button>\r\n      <Button\r\n        type=\"link\"\r\n        onClick={() => {\r\n          setShowModal(true);\r\n          setModalProps({\r\n            ...modalProps,\r\n            title: \"添加照片\",\r\n            columns: [\r\n              {\r\n                title: \"\",\r\n                name: \"url\",\r\n                key: \"url\",\r\n                valueType: \"imgUpload\",\r\n                fileList: record.photos.map((e: Photo) => ({\r\n                  uid: e.id,\r\n                  name: e.name,\r\n                  url:\r\n                    e?.url?.substring(0, e.url.lastIndexOf(\".\")) +\r\n                    \"-pre\" +\r\n                    e?.url?.substring(e.url.lastIndexOf(\".\")),\r\n                  status: \"done\",\r\n                })),\r\n                onRemove: (p: { id: string; fileName: string }) => {\r\n                  deleteById(p);\r\n                },\r\n                onUpload: (file: File) => {\r\n                  const fd = new FormData();\r\n                  fd.append(\"file\", file);\r\n                  fd.append(\"album\", record.id);\r\n                  fd.append(\"sortOrder\", \"0\");\r\n                  runUpload(fd);\r\n                },\r\n              },\r\n            ],\r\n\r\n            footer: [],\r\n          });\r\n        }}\r\n      >\r\n        添加照片\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const updateSort = useCallback(\r\n    debounce((value) => {\r\n      runUpdateAlbum(value);\r\n    }, 1000),\r\n    []\r\n  );\r\n  const updateSortPhoto = useCallback(\r\n    debounce((value) => {\r\n      runUpdatePhoto(value);\r\n    }, 1000),\r\n    []\r\n  );\r\n  const columns: ColumnsType<DataType> = [\r\n    ...TABLE_COLUMNS,\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sortOrder\",\r\n      key: \"sortOrder\",\r\n      width: \"120px\",\r\n      render: (value, record) => {\r\n        return (\r\n          <InputNumber\r\n            bordered={false}\r\n            // addonBefore={<EditOutlined />}\r\n            // addonAfter={<EditOutlined />}\r\n            min={0}\r\n            defaultValue={value}\r\n            onChange={(value) => updateSort({ ...record, sortOrder: value })}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      fixed: \"right\",\r\n      width: \"250px\",\r\n      render: tableActions,\r\n    },\r\n  ];\r\n  const PHOTOS_COLUNM: ColumnsType<DataType> = [\r\n    ...EXPANDED_ROW_COLUMN,\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sortOrder\",\r\n      key: \"sortOrder-photo\",\r\n      width: \"120px\",\r\n      render: (value, record) => {\r\n        return (\r\n          <InputNumber\r\n            bordered={false}\r\n            min={0}\r\n            defaultValue={value}\r\n            onChange={(value) =>\r\n              updateSortPhoto({ ...record, sortOrder: value })\r\n            }\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      key: \"operation-photo\",\r\n      render: (_: any, record: any) => {\r\n        const flag = record.hideFlag === \"01\";\r\n        return (\r\n          <>\r\n            <Button\r\n              type=\"link\"\r\n              style={{ color: `${flag ? \"red\" : \"green\"}` }}\r\n              onClick={() => {\r\n                runUpdatePhoto({\r\n                  ...record,\r\n                  hideFlag: `${flag ? \"00\" : \"01\"}`,\r\n                });\r\n              }}\r\n            >\r\n              {flag ? \"隐藏\" : \"激活\"}\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              style={{ color: \"red\" }}\r\n              onClick={() => {\r\n                deleteById({ id: record.id, fileName: record.name });\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const expandedRowRender = (param: Album) => {\r\n    return (\r\n      <Table\r\n        columns={PHOTOS_COLUNM}\r\n        dataSource={param.photos}\r\n        pagination={false}\r\n        rowKey={\"id\"}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Spin\r\n      spinning={\r\n        updateLoading ||\r\n        upLoadLoading ||\r\n        updatePhotoLoading ||\r\n        deleteByIdLoading\r\n      }\r\n    >\r\n      <div>\r\n        <AlbumFilter\r\n          runQueryByPage={runQueryByPage}\r\n          setModalProps={setModalProps}\r\n          modalProps={modalProps}\r\n          modalForm={modalForm}\r\n          show={showModal}\r\n          loading={loading}\r\n          setShow={setShowModal}\r\n          setLoading={setLoading}\r\n        />\r\n        <Table\r\n          loading={queryByPageLoading}\r\n          columns={columns}\r\n          expandable={{ expandedRowRender }}\r\n          rowKey={\"id\"}\r\n          dataSource={data}\r\n          sticky={true}\r\n          scroll={{ x: 1000 }}\r\n        />\r\n        <FormModal\r\n          {...modalProps}\r\n          form={modalForm}\r\n          show={showModal}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default AlbumManage;\r\n"],"names":["RULE_REQUIRED","required","message","TABLE_COLUMNS","title","dataIndex","key","ellipsis","render","value","record","index","moment","format","SEACH_COLUMNS","label","name","valueType","ALBUM","rules","EXPANDED_ROW_COLUMN","v","status","text","offsetIndex","lastIndexOf","preUrl","substring","src","preview","props","columns","show","setShow","footer","form","loading","open","width","onCancel","style","textAlign","fontSize","spinning","length","layout","labelCol","span","wrapperCol","padding","maxHeight","map","item","getField","runQueryByPage","setModalProps","modalProps","modalForm","setLoading","Form","useEffect","pgNum","pgSize","runAddAlbum","useRequest","album","onSuccess","onError","err","manual","run","margin","minWidth","initialValues","remember","onFinish","val","keyword","start","date","valueOf","end","gutter","type","htmlType","SearchOutlined","marginLeft","onClick","block","validateFields","then","res","PlusOutlined","useState","data","setData","showModal","setShowModal","upLoadLoading","runUpload","updateLoading","runUpdateAlbum","updatePhotoLoading","runUpdatePhoto","deleteByIdLoading","deleteById","albums","records","e","photos","queryByPageLoading","updateSort","useCallback","debounce","updateSortPhoto","bordered","min","defaultValue","onChange","sortOrder","align","fixed","_","hideFlag","color","id","setFieldsValue","fileList","uid","url","onRemove","p","onUpload","file","fd","FormData","append","PHOTOS_COLUNM","flag","fileName","expandable","expandedRowRender","param","dataSource","pagination","rowKey","sticky","scroll","x"],"sourceRoot":""}